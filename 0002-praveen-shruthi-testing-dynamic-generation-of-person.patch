From f86b12e75981df4f0dfea98131cc71fb26da2bca Mon Sep 17 00:00:00 2001
From: pchandra <pchandra@thoughtworks.com>
Date: Tue, 18 Jun 2013 16:28:36 +0530
Subject: [PATCH 2/2] praveen,shruthi|testing dynamic generation of person
 attribute fields

---
 .../patient/controllers/createPatientController.js |  114 ++++++++++---------
 app/modules/patient/views/patientcommon.html       |    5 +-
 2 files changed, 62 insertions(+), 57 deletions(-)

diff --git a/app/modules/patient/controllers/createPatientController.js b/app/modules/patient/controllers/createPatientController.js
index 4de3de6..581a0a2 100644
--- a/app/modules/patient/controllers/createPatientController.js
+++ b/app/modules/patient/controllers/createPatientController.js
@@ -1,59 +1,65 @@
 'use strict';
 
-angular.module('registration.createPatient', ['resources.patientService', 'resources.preferences', 'resources.patient', 'resources.errorCode', 'resources.date', 'infrastructure.spinner','resources.patientAttributeType'])
-    .controller('CreatePatientController', ['$scope', 'patientService', '$location', 'Preferences', '$route', 'patient', '$window', 'errorCode', 'date', 'spinner','patientAttributeType',
-        function ($scope, patientService, $location, preferences, $route, patientModel, $window, errorCode, date, spinner, patientAttributeType) {
-            (function () {
-                $scope.patient = patientModel.create();
-                $scope.centers = constants.centers;
-                $scope.patient.centerID = $scope.centers.filter(function (center) {
-                    return center.name === preferences.centerID
-                })[0];
-                $scope.hasOldIdentifier = preferences.hasOldIdentifier;
-                $scope.patientAttributeType = patientAttributeType.getAll();
-
-                console.log($scope.patientAttributeType);
-            })();
-
-            var setPreferences = function () {
-                preferences.centerID = $scope.patient.centerID.name;
-                preferences.hasOldIdentifier = $scope.hasOldIdentifier;
-            };
-
-            var successCallback = function(data){
-                $scope.patient.uuid = data.uuid;
-                $scope.patient.identifier = data.identifier;
-                $scope.patient.name = data.name;
-                $scope.patient.isNew = true;
-                $scope.patient.registrationDate =  date.now();
-                patientService.rememberPatient($scope.patient);
-                $window.history.pushState(null, null, $location.absUrl().replace("new", data.uuid) + "?newpatient=true");
-
-                $location.path("/visit/new");
-            }
+angular.module('registration.createPatient', ['resources.patientService', 'resources.preferences', 'resources.patient', 'resources.errorCode', 'resources.date', 'infrastructure.spinner', 'resources.patientAttributeType'])
+    .controller('CreatePatientController', ['$scope', 'patientService', '$location', 'Preferences', '$route', 'patient', '$window', 'errorCode', 'date', 'spinner', 'patientAttributeType',
+    function ($scope, patientService, $location, preferences, $route, patientModel, $window, errorCode, date, spinner, patientAttributeType) {
+        (function () {
+            $scope.patient = patientModel.create();
+            $scope.centers = constants.centers;
+            $scope.patient.centerID = $scope.centers.filter(function (center) {
+                return center.name === preferences.centerID
+            })[0];
+            $scope.hasOldIdentifier = preferences.hasOldIdentifier;
+            $scope.patientAttributeType = patientAttributeType.getAll();
 
-            $scope.create = function () {
-                setPreferences();
-                var createPatientPromise = patientService.create($scope.patient).success(successCallback).error(function(data){
-                    if(errorCode.isOpenERPError(data))
-                        successCallback(data.patient);
-                });
-                spinner.forPromise(createPatientPromise);
-            };
-
-            $scope.patientCommon = function() {
-                return $route.routes['/patientcommon'].templateUrl;
-            };
-
-            $scope.isAConcept = function(attributeType){
-                if(attributeType.format === "org.openmrs.Concept"){
-                    console.log("returning true");
-                    return true;
-                }
-                return false;
-            }
+            console.log("dedede"+$scope.patientAttributeType);
+        })();
+
+        var setPreferences = function () {
+            preferences.centerID = $scope.patient.centerID.name;
+            preferences.hasOldIdentifier = $scope.hasOldIdentifier;
+        };
+
+        var successCallback = function (data) {
+            $scope.patient.uuid = data.uuid;
+            $scope.patient.identifier = data.identifier;
+            $scope.patient.name = data.name;
+            $scope.patient.isNew = true;
+            $scope.patient.registrationDate = date.now();
+            patientService.rememberPatient($scope.patient);
+            $window.history.pushState(null, null, $location.absUrl().replace("new", data.uuid) + "?newpatient=true");
 
-            $scope.getOptions = function(attributeType){
-                
+            $location.path("/visit/new");
+        }
+
+        $scope.create = function () {
+            setPreferences();
+            var createPatientPromise = patientService.create($scope.patient).success(successCallback).error(function (data) {
+                if (errorCode.isOpenERPError(data))
+                    successCallback(data.patient);
+            });
+            spinner.forPromise(createPatientPromise);
+        };
+
+        $scope.patientCommon = function () {
+            return $route.routes['/patientcommon'].templateUrl;
+        };
+
+        $scope.isAConcept = function (attributeType) {
+            if (attributeType.format === "org.openmrs.Concept") {
+                console.log("returning true");
+                return true;
             }
-        }]);
+            return false;
+        }
+
+        $scope.getOptions = function (patientAttribute) {
+            return [
+                {name:patientAttribute.name, shade:'dark'},
+                {name:'white', shade:'light'},
+                {name:'red', shade:'dark'},
+                {name:'blue', shade:'dark'},
+                {name:'yellow', shade:'light'}
+            ];
+        }
+    }]);
-- 
1.7.7.5 (Apple Git-26)

